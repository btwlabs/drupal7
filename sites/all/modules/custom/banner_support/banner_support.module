<?php
/**
 * @file
 * Code for the Banner Support feature.
 */

include_once 'banner_support.features.inc';

/**
 * Implements hook_entity_view_mode_alter().
 */
function banner_support_entity_view_mode_alter(&$view_mode, $context) {
  // Switch banner view modes on banner display options logic.
  // This works b/c banners are only shown in a views block.
  $node = $context['entity'];
  if (($context['entity_type'] == 'node') && ($node->type == 'banner')) {
    $large_display = $node->field_large_options[LANGUAGE_NONE][0]['value'];
    $small_display = $node->field_small_options[LANGUAGE_NONE][0]['value'];
    switch($large_display) {
      case 'image-only':
        if ($small_display == 'image-only') {
          $view_mode = 'bnr_lg_img_only_sml_img_only';
        }
        elseif ($small_display == 'image-and-body') {
          $view_mode = 'bnr_lg_img_only_sml_with_bdy';
        }
        else {
          $view_mode = 'bnr_lg_img_only_sml_hidden';
        }
        break;
      case 'image-and-body':
        if ($small_display == 'image-only') {
          $view_mode = 'bnr_lg_with_bdy_sml_img_only';
        }
        elseif ($small_display == 'image-and-body') {
          $view_mode = 'bnr_lg_with_bdy_sml_with_bdy';
        }
        else {
          $view_mode = 'bnr_lg_with_bdy_sml_hidden';
        }
        break;
      case 'do-not-display':
        if ($small_display == 'image-only') {
          $view_mode = 'bnr_lg_hidden_sml_img_only';
        }
        elseif ($small_display == 'image-and-body') {
          $view_mode = 'bnr_lg_hidden_small_with_bdy';
        }
        else {
          $view_mode = 'bnr_lg_hidden_sml_hidden';
        }
        break;
    }
  }
}

/**
 * Implements hook_preprocess_node().
 */
function banner_support_preprocess_node(&$vars) {
  // Proceed if this is a banner.
  if ($vars['node']->type == 'banner') {
    // Create a linked large format banner image preprocess field.
    // This should provide an image whether there is a link or not.
    if (!empty($vars['field_banner_link']) && !empty($vars['field_banner_large_image'])) {
      $image = (isset($vars['field_banner_large_image'][LANGUAGE_NONE][0])) ? $vars['field_banner_large_image'][LANGUAGE_NONE][0] : $vars['field_banner_large_image'][0];
      $image_array = field_view_value('node', $vars['node'], 'field_banner_large_image', $image);
      $field_content = array(
        '#theme' => 'link',
        //'#path' => $url,
        '#text' => drupal_render($image_array),
        '#options' => array(
          'html' => TRUE,
          'attributes' => array(
            'class' => array('banner-image-link banner-large-image-link image reactive'),
          ),
        ),
      );

      // Set the path.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['url'])) {
        $field_content['#path'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['url'];
      }
      elseif (isset($vars['field_banner_link'][0]['url'])) {
        $field_content['#path'] = $vars['field_banner_link'][0]['url'];
      }
      else $url = current_path();

      // Set the fragment.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['fragment'])) {
        $field_content['#options']['fragment'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['fragment'];
      }
      elseif (isset($vars['field_banner_link'][0]['fragment'])) {
        $field_content['#options']['fragment'] = $vars['field_banner_link'][0]['fragment'];
      }

      // Set the query.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['query'])) {
        $field_content['#options']['query'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['query'];
      }
      elseif (isset($vars['field_banner_link'][0]['url'])) {
        $field_content['#options']['query'] = $vars['field_banner_link'][0]['query'];
      }

      $vars['linked_large_format_image'] = drupal_render($field_content);
    }
    elseif (!empty($vars['field_banner_large_image'])) {
      $image = (isset($vars['field_banner_large_image'][LANGUAGE_NONE][0])) ? $vars['field_banner_large_image'][LANGUAGE_NONE][0] : $vars['field_banner_large_image'][0];
      $image_array = field_view_value('node', $vars['node'], 'field_banner_large_image', $image);
      $vars['linked_large_format_image'] = drupal_render($image_array);
    }

    // Create a linked small format banner image preprocess field.
    // This should provide an image whether there is a link or not.
    if (!empty($vars['field_banner_link']) && !empty($vars['field_banner_small_image'])) {
      $image = (isset($vars['field_banner_small_image'][LANGUAGE_NONE][0])) ? $vars['field_banner_small_image'][LANGUAGE_NONE][0] : $vars['field_banner_small_image'][0];
      $image_array = field_view_value('node', $vars['node'], 'field_banner_small_image', $image);

      $field_content = array(
        '#theme' => 'link',
        '#text' => drupal_render($image_array),
        '#options' => array(
          'html' => TRUE,
          'attributes' => array(
            'class' => array('banner-image-link banner-small-image-link image reactive'),
          ),
        ),
      );

      // Set the path.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['url'])) {
        $field_content['#path'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['url'];
      }
      elseif (isset($vars['field_banner_link'][0]['url'])) {
        $field_content['#path'] = $vars['field_banner_link'][0]['url'];
      }
      else $field_content['#path'] = current_path();

      // Set the fragment.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['fragment'])) {
        $field_content['#options']['fragment'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['fragment'];
      }
      elseif (isset($vars['field_banner_link'][0]['fragment'])) {
        $field_content['#options']['fragment'] = $vars['field_banner_link'][0]['fragment'];
      }

      // Set the query.
      if (isset($vars['field_banner_link'][LANGUAGE_NONE][0]['query'])) {
        $field_content['#options']['query'] = $vars['field_banner_link'][LANGUAGE_NONE][0]['query'];
      }
      elseif (isset($vars['field_banner_link'][0]['url'])) {
        $field_content['#options']['query'] = $vars['field_banner_link'][0]['query'];
      }

      $vars['linked_small_format_image'] = drupal_render($field_content);
    }
    elseif (!empty($vars['field_banner_small_image'])) {
      $image = (isset($vars['field_banner_small_image'][LANGUAGE_NONE][0])) ? $vars['field_banner_small_image'][LANGUAGE_NONE][0] : $vars['field_banner_small_image'][0];
      $image_array = field_view_value('node', $vars['node'], 'field_banner_small_image', $image);
      $vars['linked_small_format_image'] = drupal_render($image_array);
    }
  }
}

/**
 * Implements hook_ds_layout_info().
 */
function banner_support_ds_layout_info() {
  $path = drupal_get_path('module', 'banner_support');

  $layouts['banner_support_1'] = array(
    'label' => t('Banner - Large and Small Formats'),
    'path' => $path . '/layouts/banner_support_1',
    'regions' => array(
      'large_format' => t('Large Format'),
      'small_format' => t('Small Format'),
    ),
    'css' => TRUE,
    'form' => FALSE,
    'image' => TRUE,
  );

  return $layouts;
}
