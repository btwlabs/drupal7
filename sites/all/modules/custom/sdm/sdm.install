<?php
/**
 * @file
 * sdm.install
 */

/**
 * Implements hook_schema().
 */
function sdm_schema() {
  $schema = array();
  $schema['sdm_entity'] = array(
    'description' => 'Stores Structured Data Markup Entity information.',
    'fields' => array(
      'sdm_entity_id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Primary Key: Unique Structured Data Markup  Entity ID.',
      ),
      'name' => array(
        'description' => 'The name for the Structured Data Markup Entity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'description' => array(
        'description' => 'A short description for this Structured Data Markup Entity.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'sdm_entity_type' => array(
        'description' => 'The type of Structured Data Markup Entity bundle.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'data' => array(
        'description' => 'Additional data attached to a Structured Data Markup Entity',
        'type' => 'blob',
        'serialize' => TRUE,
        'not null' => FALSE,
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point. 
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('sdm_entity_id'),
    'forign keys' => array(
      'sdm_entity_type' => array(
        'table' => 'sdm_entity_type',
        'columns' => array('sdm_entity_type' => 'sdm_entity_type'),
      ),
    ),
  );

  $schema['sdm_entity_type'] = array(
    'description' => 'Stores Structured Data Markup Entity Bundle Info.',
    'fields' => array(
      'sdm_entity_type' => array(
        'description' => 'The type of Structured Data Markup Entity bundle.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'label' => array(
        'description' => 'The label for ui purposes.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
        'default' => NULL,
      ),
      'description' => array(
        'description' => 'A short description for this Structured Data Markup type.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'status' => array(
        'type' => 'int',
        'not null' => TRUE,
        // Set the default to ENTITY_CUSTOM without using the constant as it is
        // not safe to use it at this point. 
        'default' => 0x01,
        'size' => 'tiny',
        'description' => 'The exportable status of the Structured Data Markup Entity.',
      ),
      'module' => array(
        'description' => 'The name of the providing module if the entity has been defined in code.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'data' => array(
        'description' => 'Additional data attached to a Structured Data Markup type',
        'type' => 'blob',
        'serialize' => TRUE,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('sdm_entity_type'),
  );
  return $schema;
}

/**
 * Implements hook_uninstall();
 */
function sdm_uninstall() {
   db_query('DROP TABLE {sdm_entity}');
   db_query('DROP TABLE {sdm_entity_type}');
   
   cache_clear_all('*', 'cache', TRUE);
}
